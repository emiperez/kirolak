package com.kirolak;

import java.util.Iterator;
import java.util.Locale;
import java.util.Set;

import com.kirolak.util.I18n;

// Generated 30-nov-2007 8:26:55 by Hibernate Tools 3.2.0.CR1

/**
 * Sport generated by hbm2java
 */
public class Sport extends KirolakObject implements java.io.Serializable
{
	private Byte maxParts;
	private Byte pointsDraw;
	private Byte pointsLoose;
	private Byte pointsWin;
	private Byte scoreMode;
	private Set<LocalizedSportData> localizedItems;
	
	private LocalizedSportData localizedItem;

	public Sport()
	{
		this.id = -1;
	}

	public Sport(short id, Byte scoreMode, Byte maxParts, Byte pointsWin,
			Byte pointsDraw, Byte pointsLoose)
	{
		this.id = id;
		this.scoreMode = scoreMode;
		this.maxParts = maxParts;
		this.pointsWin = pointsWin;
		this.pointsDraw = pointsDraw;
		this.pointsLoose = pointsLoose;
	}

	public void setId(short id)
	{
		this.id = id;
	}

	public short getId()
	{
		return Integer.valueOf(this.id).shortValue();
	}
	
	public String getSeoName()
	{
		return getLocalizedSport().getSeoName();
	}
	
	public String getName()
	{
		return getLocalizedSport().getName();
	}
	
	public String getPartName()
	{
		return getLocalizedSport().getPartName();
	}
	
	public String getPlayOffName()
	{
		return getLocalizedSport().getPlayOffName();
	}

	public Byte getMaxParts()
	{
		return this.maxParts;
	}

	public Byte getPointsDraw()
	{
		return this.pointsDraw;
	}

	public Byte getPointsLoose()
	{
		return this.pointsLoose;
	}

	public Byte getPointsWin()
	{
		return this.pointsWin;
	}

	public Byte getScoreMode()
	{
		return this.scoreMode;
	}

	public void setMaxParts(Byte maxParts)
	{
		this.maxParts = maxParts;
	}

	public void setPointsDraw(Byte pointsDraw)
	{
		this.pointsDraw = pointsDraw;
	}

	public void setPointsLoose(Byte pointsLoose)
	{
		this.pointsLoose = pointsLoose;
	}

	public void setPointsWin(Byte pointsWin)
	{
		this.pointsWin = pointsWin;
	}

	public void setScoreMode(Byte scoreMode)
	{
		this.scoreMode = scoreMode;
	}

	public boolean equals(Object obj)
	{
		return (this == obj || (obj != null && (obj instanceof Sport) && ((Sport) obj).id == this.id));
	}


	public Set<LocalizedSportData> getLocalizedSportData()
    {
    	return localizedItems;
    }

	public void setLocalizedSportData(Set<LocalizedSportData> localizedItems)
    {
    	this.localizedItems = localizedItems;
    }	
	
	public LocalizedSportData getLocalizedSport()
	{
		if(this.localizedItem == null)
		{
			Locale locale = I18n.getCurrentLocale();			
			LocalizedSportData returnValue = null;
			Iterator<LocalizedSportData> iterator = this.localizedItems.iterator();
			LocalizedSportData item;
			
			while(iterator.hasNext())
			{
				item = iterator.next();
				if(item.getLocale().equals(locale))
				{
					this.localizedItem = item;
					return item;
				}
				else
				{
					if (item.getLocale().getLanguage().equals(locale.getLanguage()))
					{
						returnValue = item;					
					}
				}
			}
			this.localizedItem = returnValue;
		}
		return this.localizedItem;
	}

}
